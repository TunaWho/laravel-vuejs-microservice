<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
    <description>The coding standard for our project.</description>
    <rule ref="PSR1"/>
    <rule ref="PSR12"/>
    <rule ref="Squiz"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.Debug.ESLint"/>
    <rule ref="Generic.NamingConventions"/>

    <!-- using for routes -->
    <rule ref="Squiz.Commenting">
        <exclude-pattern>routes/*</exclude-pattern>
        <exclude-pattern>config/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment.TagNotAllowed">
        <exclude-pattern>Models/*</exclude-pattern>
    </rule>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <exclude-pattern>Resources/*</exclude-pattern>
        <exclude-pattern>app/Policies/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude-pattern>Traits/*</exclude-pattern>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <exclude-pattern>routes/*</exclude-pattern>
        <exclude-pattern>config/*</exclude-pattern>
    </rule>

    <!-- using for config -->
    <rule ref="Squiz.Arrays">
        <exclude-pattern>config/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.PHP.CommentedOutCode.Found">
        <exclude-pattern>config/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue">
        <exclude-pattern>config/*</exclude-pattern>
    </rule>
    <rule ref="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue">
        <exclude-pattern>config/*</exclude-pattern>
    </rule>

    <!-- using for global -->
    <rule ref="PEAR.Commenting.FileComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="PSR12.ControlStructures.ControlStructureSpacing.FirstExpressionLine">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FileComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.PHP.DisallowComparisonAssignment.AssignedComparison">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration.BreakIndent">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.InvalidReturn">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.IncorrectParamVarName">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParamType">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration.NotAllowed">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Commenting.ClassComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Files.FileExtension.ClassFound">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Strings.ConcatenationSpacing.PaddingFound">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing.AfterLast">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FileComment.MissingSubpackageTag">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.ControlStructures.InlineIfDeclaration">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.PHP.DisallowInlineIf.Found">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Operators.ComparisonOperatorUsage">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing.BeforeFirst">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.ClosingDeclarationComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.NoKeySpecified">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeySpecified">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Formatting.MultipleStatementAlignment.NotSame">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Objects.ObjectInstantiation.NotAssigned">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Formatting.MultipleStatementAlignment.NotSame">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Formatting.OperatorBracket.MissingBrackets">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.VariableComment.IncorrectVarType">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
           <property name="spacing" value="1"/>
       </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingReturn">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <exclude-pattern>route/*</exclude-pattern>
        <properties>
           <property name="lineLimit" value="120"/>
           <!-- <property name="absoluteLineLimit" value="80"/> -->
           <property name="ignoreComments" value="true"/>
       </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="absoluteNestingLevel" value="4" />
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
        <properties>
            <property name="spacing" value="0" />
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.TraitNameSuffix.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Commenting.DocComment.MissingShort">
        <severity>0</severity>
    </rule>

    <!-- list file using -->
    <file>app</file>
    <file>bootstrap</file>
    <file>config</file>
    <file>database</file>
    <file>resources</file>
    <file>routes</file>

    <!-- list file exclude -->
    <exclude-pattern>routes</exclude-pattern>
    <exclude-pattern>bootstrap/cache/*</exclude-pattern>
    <exclude-pattern>*/Commands/*</exclude-pattern>
    <exclude-pattern>app/Providers/*</exclude-pattern>
    <exclude-pattern>app/Enums/*</exclude-pattern>
    <exclude-pattern>app/Http/Kernel</exclude-pattern>
    <exclude-pattern>app/Http/Middleware/*</exclude-pattern>
    <exclude-pattern>app/Http/Resources/BaseResource</exclude-pattern>
    <exclude-pattern>app/Console/Kernel</exclude-pattern>
    <exclude-pattern>app/Exceptions/*</exclude-pattern>
    <exclude-pattern>bootstrap/autoload.php</exclude-pattern>
    <exclude-pattern>*/database/*</exclude-pattern>
    <exclude-pattern>*/seeders/*</exclude-pattern>
    <exclude-pattern>*/seeds/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*.blade.php</exclude-pattern>
    <exclude-pattern>*\.(inc|css|js)</exclude-pattern>

    <!-- Show progression -->
    <arg value="p"/>
</ruleset> 